name: deploy-workout-api

on:
  push:
    branches:
      - main
      - dev

jobs:
  test:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js.
        uses: actions/setup-node@v3
        with:
          node-version: "20.x"

      - name: Install Dependencies.
        run: |
          cd backend/test
          npm install

      - name: Run tests.
        run: |
          npm test

  deploy:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v3


      - name: Install dependencies.
        run: |
          cd backend/api
          npm install

      - name: Install Serverless Framework.
        run: |
          npm install -g serverless

      - name: Deploy to AWS (Dev).
        if: github.ref == 'refs/heads/dev'
        run: |
          cd backend/api
          npx serverless deploy --stage dev
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          SERVERLESS_ACCESS_KEY: ${{ secrets.SERVERLESS_ACCESS_KEY }}

      - name: Deploy to AWS (Prod)
        if: github.ref == 'refs/heads/main'
        run: |
          cd backend/api
          npx serverless deploy --stage prod
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          SERVERLESS_ACCESS_KEY: ${{ secrets.SERVERLESS_ACCESS_KEY }}

  docker_push:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout code.
        uses: actions/checkout@v3

      - name: Build Docker image
        run: |
          docker build -t allanbinga/serverless-api:v1.0.0 .

      - name: Log in to DockerHub.
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Push Docker image to DockerHub.
        run: |
          docker push allanbinga/serverless-api:v1.0.0
  
  notify_slack:
    needs: [test, deploy, docker_push]
    runs-on: ubuntu-24.04
    steps:
      - name: Notify Slack if job succeeds.
        if: success()
        uses: slackapi/slack-github-action@v1.25.0
        with:
          channel-id: ${{ secrets.CHANNEL_ID }}
          slack-message: |
            :white_check_mark: Job Succeeded!
        env:
          SLACK_BOT_TOKEN: ${{ secrets.BOT_TOKEN }}

      - name: Notify Slack if job fails.
        if: failure()
        uses: slackapi/slack-github-action@v1.25.0
        with:
          channel-id: ${{ secrets.CHANNEL_ID }}
          slack-message: |
            :x: Deployment Workflow Failed!
        env:
          SLACK_BOT_TOKEN: ${{ secrets.BOT_TOKEN }}    
